name: hydrun CI

on:
  - push

jobs:
  build-linux:
    runs-on: self-hosted
    strategy:
      matrix:
        target:
          - id: fedora-hetzner
            src: .
            os: fedora:39
            cmd: ./Hydrunfile fedora hetzner
            dst: out/*
          - id: rocky-hetzner
            src: .
            os: fedora:39
            cmd: ./Hydrunfile rocky hetzner
            dst: out/*
          - id: alma-hetzner
            src: .
            os: fedora:39
            cmd: ./Hydrunfile alma hetzner
            dst: out/*

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Restore ccache
        uses: actions/cache/restore@v4
        with:
          path: |
            ${{ runner.temp }}/${{ matrix.target.id }}/.cache/ccache
          key: ccache-${{ matrix.target.id }}
      - name: Set up hydrun
        run: |
          curl -L -o ${{ runner.temp }}/hydrun "https://github.com/pojntfx/hydrun/releases/latest/download/hydrun.linux-$(uname -m)"
          chmod +x ${{ runner.temp }}/hydrun
      - name: Build with hydrun
        working-directory: ${{ matrix.target.src }}
        env:
          PGP_KEY: ${{ secrets.PGP_KEY }}
          PGP_KEY_PASSWORD: ${{ secrets.PGP_KEY_PASSWORD }}
          PGP_KEY_ID: ${{ secrets.PGP_KEY_ID }}
        run: ${{ runner.temp }}/hydrun -o ${{ matrix.target.os }} -e "-v ${{ runner.temp }}/${{ matrix.target.id }}/.cache/ccache:/root/.cache/ccache" "PGP_KEY=${PGP_KEY} PGP_KEY_PASSWORD=${PGP_KEY_PASSWORD} PGP_KEY_ID=${PGP_KEY_ID} ${{ matrix.target.cmd }}"
      - name: Save ccache
        uses: actions/cache/save@v4
        with:
          path: |
            ${{ runner.temp }}/${{ matrix.target.id }}/.cache/ccache
          key: ccache-${{ matrix.target.id }}
      - name: Upload output
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target.id }}
          path: ${{ matrix.target.dst }}

  publish-linux:
    runs-on: self-hosted
    needs: build-linux

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download output
        uses: actions/download-artifact@v2
        with:
          path: ${{ runner.temp }}/out
      - name: Isolate the repositories
        run: |
          mkdir -p ${{ runner.temp }}/github-pages
          for dir in ${{ runner.temp }}/out/*/; do
            rsync -a "${dir}"/ ${{ runner.temp }}/github-pages/
          done
      - name: Publish to GitHub pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ runner.temp }}/github-pages/
          keep_files: true
          user_name: github-actions[bot]
          user_email: github-actions[bot]@users.noreply.github.com
