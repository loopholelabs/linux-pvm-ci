name: hydrun CI

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * 0"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - id: fedora-hetzner
            src: .
            os: fedora:39
            flags: ""
            cmd: ./Hydrunfile fedora hetzner
            dst: out/*
          - id: rocky-hetzner
            src: .
            os: rockylinux:9
            flags: ""
            cmd: ./Hydrunfile rocky hetzner
            dst: out/*
          - id: alma-hetzner
            src: .
            os: almalinux:9
            flags: ""
            cmd: ./Hydrunfile alma hetzner
            dst: out/*

    steps:
      - name: Maximize build space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set up hydrun
        run: |
          curl -L -o /tmp/hydrun "https://github.com/pojntfx/hydrun/releases/latest/download/hydrun.linux-$(uname -m)"
          sudo install /tmp/hydrun /usr/local/bin
      - name: Build with hydrun
        working-directory: ${{ matrix.target.src }}
        env:
          PGP_KEY: ${{ secrets.PGP_KEY }}
          PGP_KEY_PASSWORD: ${{ secrets.PGP_KEY_PASSWORD }}
          PGP_KEY_ID: ${{ secrets.PGP_KEY_ID }}
        run: hydrun -o ${{ matrix.target.os }} ${{ matrix.target.flags }} "PGP_KEY=${PGP_KEY} PGP_KEY_PASSWORD=${PGP_KEY_PASSWORD} PGP_KEY_ID=${PGP_KEY_ID} ${{ matrix.target.cmd }}"
      - name: Upload output
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target.id }}
          path: ${{ matrix.target.dst }}

  publish-linux:
    runs-on: ubuntu-latest
    needs: build-linux

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download output
        uses: actions/download-artifact@v2
        with:
          path: /tmp/out
      - name: Isolate the repositories
        run: |
          mkdir -p /tmp/github-pages
          for dir in /tmp/out/*/; do
            rsync -a "${dir}"/ /tmp/github-pages/
          done
      - name: Add index for repositories
        run: |
          sudo apt update
          sudo apt install -y tree

          cd /tmp/github-pages/
          tree --timefmt '%Y-%m-%dT%H:%M:%SZ' -T 'Linux PVM Repositories' --du -h -D -H . -o 'index.html'
      - name: Publish to GitHub pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: /tmp/github-pages/
          keep_files: true
          user_name: github-actions[bot]
          user_email: github-actions[bot]@users.noreply.github.com
