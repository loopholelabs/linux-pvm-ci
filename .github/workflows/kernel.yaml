name: Kernel CI

on:
  - push

jobs:
  build-oci-image:
    runs-on: ${{ matrix.target.runner }}
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      matrix:
        target:
          - src: .
            image: ghcr.io/loopholelabs/linux-pvm-ci-build-base
            arch: "linux/amd64" # linux/arm/v5,linux/arm/v7,linux/arm64/v8,linux/386,linux/s390x,linux/mips64le,linux/ppc64le
            runner: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.target.image }}
          tags: type=semver,pattern={{version}}
      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.target.src }}
          file: ${{ matrix.target.src }}/Dockerfile
          platforms: ${{ matrix.target.arch }}
          push: false
          tags: ${{ matrix.target.image }}:${{ github.ref_name }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Push pre-release image to registry
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.target.src }}
          file: ${{ matrix.target.src }}/Dockerfile
          platforms: ${{ matrix.target.arch }}
          push: true
          tags: ${{ matrix.target.image }}:${{ github.ref_name }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Push release image to registry
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.target.src }}
          file: ${{ matrix.target.src }}/Dockerfile
          platforms: ${{ matrix.target.arch }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-kernel:
    runs-on: ${{ matrix.target.runner }}
    needs: build-oci-image
    permissions:
      contents: read
    strategy:
      matrix:
        target:
          - id: fedora-baremetal
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile fedora baremetal pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: fedora-hetzner
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile fedora hetzner pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: fedora-digitalocean
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile fedora digitalocean pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: fedora-aws
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile fedora aws pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: fedora-gcp
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile fedora gcp pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: fedora-ovh
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile fedora ovh pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: fedora-linode
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile fedora linode pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32

          - id: rocky-baremetal
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile rocky baremetal pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: rocky-hetzner
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile rocky hetzner pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: rocky-digitalocean
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile rocky digitalocean pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: rocky-aws
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile rocky aws pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: rocky-gcp
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile rocky gcp pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: rocky-ovh
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile rocky ovh pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: rocky-azure
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile rocky azure pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: rocky-civo
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile rocky civo pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: rocky-linode
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile rocky linode pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32

          - id: alma-baremetal
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile alma baremetal pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: alma-hetzner
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile alma hetzner pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: alma-digitalocean
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile alma digitalocean pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: alma-aws
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile alma aws pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: alma-gcp
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile alma gcp pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: alma-ovh
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile alma ovh pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: alma-azure
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile alma azure pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: alma-linode
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile alma linode pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32
          
          - id: amazonlinux-aws
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile amazonlinux aws pvm-v6.7
            dst: out/*
            runner: depot-ubuntu-22.04-32

          - id: fedora-experimental-baremetal
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile fedora-experimental baremetal pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: fedora-experimental-hetzner
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile fedora-experimental hetzner pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: fedora-experimental-digitalocean
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile fedora-experimental digitalocean pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: fedora-experimental-aws
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile fedora-experimental aws pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: fedora-experimental-gcp
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile fedora-experimental gcp pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: fedora-experimental-ovh
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile fedora-experimental ovh pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: fedora-experimental-linode
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile fedora-experimental linode pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32

          - id: rocky-experimental-baremetal
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile rocky-experimental baremetal pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: rocky-experimental-hetzner
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile rocky-experimental hetzner pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: rocky-experimental-digitalocean
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile rocky-experimental digitalocean pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: rocky-experimental-aws
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile rocky-experimental aws pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: rocky-experimental-gcp
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile rocky-experimental gcp pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: rocky-experimental-ovh
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile rocky-experimental ovh pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: rocky-experimental-azure
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile rocky-experimental azure pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: rocky-experimental-civo
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile rocky-experimental civo pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: rocky-experimental-linode
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile rocky-experimental linode pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32

          - id: alma-experimental-baremetal
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile alma-experimental baremetal pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: alma-experimental-hetzner
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile alma-experimental hetzner pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: alma-experimental-digitalocean
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile alma-experimental digitalocean pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: alma-experimental-aws
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile alma-experimental aws pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: alma-experimental-gcp
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile alma-experimental gcp pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: alma-experimental-ovh
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile alma-experimental ovh pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: alma-experimental-azure
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile alma-experimental azure pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32
          - id: alma-experimental-linode
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile alma-experimental linode pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32

          - id: amazonlinux-experimental-aws
            src: .
            os: ghcr.io/loopholelabs/linux-pvm-ci-build-base:main
            cmd: ./Hydrunfile amazonlinux-experimental aws pvm-v6.7-experimental
            dst: out/*
            runner: depot-ubuntu-22.04-32

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Restore ccache
        uses: actions/cache/restore@v4
        with:
          path: |
            ${{ runner.temp }}/${{ matrix.target.id }}/.cache/ccache
          key: cache-ccache-${{ matrix.target.id }}
      - name: Build with Docker
        working-directory: ${{ matrix.target.src }}
        env:
          PGP_KEY: ${{ secrets.PGP_KEY }}
          PGP_KEY_PASSWORD: ${{ secrets.PGP_KEY_PASSWORD }}
          PGP_KEY_ID: ${{ secrets.PGP_KEY_ID }}
        run: docker run -v "${{ runner.temp }}/${{ matrix.target.id }}/.cache/ccache:/root/.cache/ccache" -v "${PWD}:/data" -e "PGP_KEY=${PGP_KEY}" -e "PGP_KEY_PASSWORD=${PGP_KEY_PASSWORD}" -e "PGP_KEY_ID=${PGP_KEY_ID}" ${{ matrix.target.os }} bash -c "cd /data && ${{ matrix.target.cmd }}"
      - name: Fix permissions for output
        run: sudo chown -R $USER .
      - name: Save ccache
        uses: actions/cache/save@v4
        with:
          path: |
            ${{ runner.temp }}/${{ matrix.target.id }}/.cache/ccache
          key: cache-ccache-${{ matrix.target.id }}
      - name: Upload output
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target.id }}
          path: ${{ matrix.target.dst }}

  publish-kernel:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    needs: build-kernel
    if: ${{ github.ref == 'refs/heads/main' }}
    environment:
      name: github-pages
      url: ${{ steps.publish.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download output
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/out
      - name: Isolate the repositories
        run: |
          mkdir -p ${{ runner.temp }}/github-pages
          for dir in ${{ runner.temp }}/out/*/; do
            rsync -a "${dir}"/ ${{ runner.temp }}/github-pages/
          done

          touch ${{ runner.temp }}/github-pages/.nojekyll
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ runner.temp }}/github-pages/
      - name: Publish to GitHub pages
        id: publish
        uses: actions/deploy-pages@v4
